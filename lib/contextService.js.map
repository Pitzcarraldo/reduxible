{"version":3,"sources":["../src/contextService.js"],"names":[],"mappings":"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","file":"contextService.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport warning from './warning';\n\nexport const INITIALIZE_SUCCESS = '@@context/INITIALIZE_SUCCESS';\nexport const INITIALIZE_FAILED = '@@context/INITIALIZE_FAILED';\nexport const REMOVE_REQUEST = '@@context/REMOVE_REQUEST';\n\nexport function initializeSuccess(keys) {\n  return {\n    type: INITIALIZE_SUCCESS,\n    payload: {\n      keys\n    }\n  };\n}\n\nexport function initializeFailed(keys) {\n  return {\n    type: INITIALIZE_FAILED,\n    payload: {\n      keys\n    }\n  };\n}\n\nexport function removeRequest() {\n  return {\n    type: REMOVE_REQUEST\n  };\n}\n\nfunction isInitialized(initialized = {}, ...keys) {\n  return keys.reduce(\n    (prevInitialized, key) => {\n      if (!initialized[key]) return initialized[key];\n      return prevInitialized;\n    }, true);\n}\n\n\nexport function preInitialize(store, keys = [], actions = []) {\n  return new Promise(resolve => {\n    const { context: { initialized } } = store.getState();\n    if (isInitialized(initialized, ...keys)) return;\n    const willDispatch = [...actions, initializeSuccess(keys)]\n      .map(action => Promise.resolve(store.dispatch(action)));\n    Promise.all(willDispatch)\n      .then(resolve)\n      .catch(error => {\n        warning('Failed to PreInitialize. Render with initialStates.');\n        warning(error.stack);\n        return resolve(store.dispatch(initializeFailed(keys)));\n      });\n  });\n}\n\nexport function initialActions(key, ...actions) {\n  return AsyncInitializedComponent =>\n    class Initialize extends Component {\n      static contextTypes = {\n        store: PropTypes.object.isRequired\n      };\n\n      static key = key;\n      static initialActions = actions;\n\n      componentDidMount() {\n        const { store } = this.context;\n        preInitialize(store, [key], actions);\n      }\n\n      render() {\n        return <AsyncInitializedComponent {...this.props} />;\n      }\n    };\n}\n\nfunction toggleKeys(initialized = {}, keys = [], flag) {\n  return keys.reduce((prevInitialized, key) => {\n    prevInitialized[key] = flag; // eslint-disable-line\n    return prevInitialized;\n  }, { ...initialized });\n}\n\nexport function reducer(state = { initialized: {} }, { type, payload }) {\n  switch (type) {\n    case INITIALIZE_SUCCESS:\n      return { ...state, initialized: toggleKeys(state.initialized, payload.keys, true) };\n    case INITIALIZE_FAILED:\n      return { ...state, initialized: toggleKeys(state.initialized, payload.keys, false) };\n    case REMOVE_REQUEST: {\n      const nextState = { ...state };\n      delete nextState.req;\n      return nextState;\n    }\n    default:\n      return state;\n  }\n}\n"]}