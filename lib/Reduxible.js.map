{"version":3,"sources":["../src/Reduxible.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;IAEqB;AACnB,WADmB,SACnB,GAA0B;QAAd,gEAAU,kBAAI;2CADP,WACO;;AACxB,SAAK,MAAL,GAAc,iCAAoB,QAAQ,MAAR,IAAkB,OAAlB,CAAlC,CADwB;AAExB,SAAK,YAAL,GAAoB,4DAAsB,WAAS,aAAa,KAAK,MAAL,CAAY,WAAZ,EAAb,GAA/B,CAApB,CAFwB;AAGxB,SAAK,aAAL,GAAqB,+BAAkB,OAAlB,CAArB,CAHwB;GAA1B;;AADmB,sBAOnB;sBAAS;;;AACP,UAAI,CAAC,KAAK,MAAL,CAAY,QAAZ,EAAD,EAAyB;AAC3B,cAAM,IAAI,KAAJ,CACJ,0FADI,CAAN,CAD2B;OAA7B;AAKA;;AAAO,2BAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB;gBAMG,KACA,SACA,SACA,OACA,cACE,kBAAkB;;;;;;;;;0BATrB,MAAK,MAAL,CAAY,WAAZ;;;;;uDACI,IAAI,IAAJ,CAAS,MAAK,aAAL,CAAmB,eAAnB,EAAT;;;AAGH,4BAAM,IAAI,WAAJ,IAAmB,IAAI,GAAJ,IAAW,GAA9B;AACN,gCAAU,sCAAoB,GAApB;AACV,gCAAU,EAAE,QAAQ,MAAK,MAAL,EAAa,QAAvB;AACV,8BAAQ,MAAK,YAAL,CAAkB,WAAlB,CAA8B,EAAE,gBAAF,EAA9B,EAA2C,wCAAiB,OAAjB,CAA3C;AACR,+BAAS,MAAK,aAAL,CAAmB,YAAnB,CAAgC,OAAhC,EAAyC,KAAzC;;6BAC8B,OAAO,YAAP,CAAoB,GAApB,EAAyB,KAAzB;;;;AAArC;AAAkB;;2BAEtB;;;;;uDACK,IAAI,QAAJ,CAAa,iBAAiB,QAAjB;;;uDAGf,IAAI,IAAJ,CAAS,QAAT;;;;;;AAEP,gDAAQ,YAAM,KAAN,CAAR;;2BAEI,YAAM,SAAN;;;;;AACF,0BAAI,MAAJ,CAAW,GAAX;uDACO,IAAI,IAAJ,CAAS,YAAM,SAAN;;;uDAGX;;;;;;;;;;;WA1BJ;;;;;;;SAAP,CANO;;;;;;AAPU,sBA4CnB;sBAA+C;UAAxC,qEAAe,kBAAyB;UAArB,yBAAqB;UAAV,wBAAU;;AAC7C,UAAI,CAAC,KAAK,MAAL,CAAY,QAAZ,EAAD,EAAyB;AAC3B,cAAM,IAAI,KAAJ,CACJ,+EADI,CAAN,CAD2B;OAA7B;;AAMA,UAAI,CAAC,SAAD,EAAY;AACd,cAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN,CADc;OAAhB;;AAIA,UAAI,gBAAJ,CAX6C;AAY7C,UAAI;AACF,kBAAU,KAAK,MAAL,CAAY,cAAZ,KACR,QAAQ,8BAAR,CADQ,GAER,QAAQ,iCAAR,CAFQ,CADR;OAAJ,CAIE,OAAO,KAAP,EAAc;AACd,kCAAQ,2DAAR,EADc;AAEd,kBAAU,uCAAV,CAFc;OAAd;AAIF,UAAM,wCAAe,aAAa,OAAb,IAAsB,QAAQ,KAAK,MAAL,GAA7C,CApBuC;AAqB7C,UAAM,QAAQ,KAAK,YAAL,CAAkB,WAAlB,+BACP,gBAAc,mBADP,EACkB,wCAAiB,OAAjB,CADlB,CAAR,CArBuC;AAwB7C,UAAM,SAAS,KAAK,aAAL,CAAmB,YAAnB,CAAgC,OAAhC,EAAyC,KAAzC,CAAT,CAxBuC;AAyB7C,aAAO,YAAP,CAAoB,SAApB,EAA+B,QAA/B,EAzB6C;;AA2B7C,UAAI,KAAK,MAAL,CAAY,WAAZ,EAAJ,EAA+B;AAC7B,eAAO,wBAAP,CAAgC,SAAhC,EAA2C,QAA3C,EAD6B;OAA/B;;;;;;SAvEiB","file":"Reduxible.js","sourcesContent":["import ReduxibleConfig from './ReduxibleConfig';\nimport StoreFactory from './store/StoreFactory';\nimport RouterFactory from './router/RouterFactory';\nimport createMemoryHistory from 'react-router/lib/createMemoryHistory';\nimport { routerMiddleware } from 'react-router-redux';\nimport warning from './warning';\n\nexport default class Reduxible {\n  constructor(options = {}) {\n    this.config = new ReduxibleConfig(options.config || options);\n    this.storeFactory = new StoreFactory({ ...options, useDevTools: this.config.useDevTools() });\n    this.routerFactory = new RouterFactory(options);\n  }\n\n  server() {\n    if (!this.config.isServer()) {\n      throw new Error(\n        'A server() only can be called in server environment. Please check your config arguments.'\n      );\n    }\n    return async(req, res, next) => {\n      try {\n        if (!this.config.isUniversal()) {\n          return res.send(this.routerFactory.renderContainer());\n        }\n\n        const url = req.originalUrl || req.url || '/';\n        const history = createMemoryHistory(url);\n        const context = { config: this.config, req };\n        const store = this.storeFactory.createStore({ context }, routerMiddleware(history));\n        const router = this.routerFactory.createRouter(history, store);\n        const { redirectLocation, rendered } = await router.renderServer(url, store);\n\n        if (redirectLocation) {\n          return res.redirect(redirectLocation.pathname);\n        }\n\n        return res.send(rendered);\n      } catch (error) {\n        warning(error.stack);\n\n        if (error.component) {\n          res.status(500);\n          return res.send(error.component);\n        }\n\n        return next(error);\n      }\n    };\n  }\n\n  client(initialState = {}, container, callback) {\n    if (!this.config.isClient()) {\n      throw new Error(\n        'A client() only can be called in browser. Please check your config arguments.'\n      );\n    }\n\n    if (!container) {\n      throw new Error('A container element is empty.');\n    }\n\n    let history;\n    try {\n      history = this.config.useHashHistory() ?\n        require('react-router/lib/hashHistory') :\n        require('react-router/lib/browserHistory');\n    } catch (error) {\n      warning('Failed to initialize browser history. Use memory history.');\n      history = createMemoryHistory();\n    }\n    const context = { ...initialState.context, config: this.config };\n    const store = this.storeFactory.createStore(\n      { ...initialState, context }, routerMiddleware(history)\n    );\n    const router = this.routerFactory.createRouter(history, store);\n    router.renderClient(container, callback);\n\n    if (this.config.useDevTools()) {\n      router.renderClientWithDevTools(container, callback);\n    }\n  }\n}\n"]}