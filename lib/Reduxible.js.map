{"version":3,"sources":["../src/Reduxible.js"],"names":[],"mappings":"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","file":"Reduxible.js","sourcesContent":["import ReduxibleConfig from './ReduxibleConfig';\r\nimport StoreFactory from './StoreFactoryImpl';\r\nimport RouterFactory from './RouterFactory';\r\nimport createMemoryHistory from 'react-router/lib/createMemoryHistory';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport warning from './warning';\r\n\r\nexport default class Reduxible {\r\n  constructor(options = {}) {\r\n    this.config = new ReduxibleConfig(options.config || options);\r\n    this.routerFactory = new RouterFactory(options);\r\n    this.storeFactory = new StoreFactory({ ...options, useDevTools: this.config.useDevTools() });\r\n  }\r\n\r\n  server() {\r\n    if (!this.config.isServer()) {\r\n      throw new Error(\r\n        'A server() only can be called in server environment. Please check your config arguments.'\r\n      );\r\n    }\r\n    return async(req, res, next) => {\r\n      try {\r\n        if (!this.config.isUniversal()) {\r\n          return res.send(this.routerFactory.renderContainer());\r\n        }\r\n\r\n        const url = req.originalUrl || req.url || '/';\r\n        const history = createMemoryHistory(url);\r\n        const context = { config: this.config, req };\r\n        const store = this.storeFactory.createStore({ context }, routerMiddleware(history));\r\n        const router = this.routerFactory.createRouter(history, store);\r\n        const { redirectLocation, rendered } = await router.renderServer(url, store);\r\n\r\n        if (redirectLocation) {\r\n          return res.redirect(redirectLocation.pathname);\r\n        }\r\n\r\n        return res.send(rendered);\r\n      } catch (error) {\r\n        warning(error.stack);\r\n\r\n        if (error.component) {\r\n          res.status(500);\r\n          return res.send(error.component);\r\n        }\r\n\r\n        return next(error);\r\n      }\r\n    };\r\n  }\r\n\r\n  client(initialState = {}, container, callback) {\r\n    if (!this.config.isClient()) {\r\n      throw new Error(\r\n        'A client() only can be called in browser. Please check your config arguments.'\r\n      );\r\n    }\r\n\r\n    if (!container) {\r\n      throw new Error('A container element is empty.');\r\n    }\r\n\r\n    let history;\r\n    try {\r\n      history = this.config.useHashHistory() ?\r\n        require('react-router/lib/hashHistory') :\r\n        require('react-router/lib/browserHistory');\r\n    } catch (error) {\r\n      warning('Failed to initialize browser history. Use memory history.');\r\n      history = createMemoryHistory();\r\n    }\r\n    const context = { ...initialState.context, config: this.config };\r\n    const store = this.storeFactory.createStore(\r\n      { ...initialState, context }, routerMiddleware(history)\r\n    );\r\n    const router = this.routerFactory.createRouter(history, store);\r\n    router.renderClient(container, callback);\r\n\r\n    if (this.config.useDevTools()) {\r\n      router.renderClientWithDevTools(container, callback);\r\n    }\r\n  }\r\n}\r\n"]}