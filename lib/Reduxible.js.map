{"version":3,"sources":["../src/Reduxible.js"],"names":[],"mappings":"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","file":"Reduxible.js","sourcesContent":["import ReduxibleConfig from './ReduxibleConfig';\nimport StoreFactory from './StoreFactory';\nimport RouterFactory from './RouterFactory';\nimport createBrowserHistory from 'history/lib/createBrowserHistory';\nimport createHashHistory from 'history/lib/createHashHistory';\nimport createMemoryHistory from 'history/lib/createMemoryHistory';\nimport contextMiddleware from './contextMiddlerware';\nimport warning from './warning';\n\nexport default class Reduxible {\n  constructor(options = {}) {\n    this.config = new ReduxibleConfig(options.config || options);\n    this.routerFactory = new RouterFactory(options);\n    this.storeFactory = new StoreFactory({ ...options, useDevTools: this.config.useDevTools() });\n    this.initialActions = options.initialActions || [];\n  }\n\n  server() {\n    if (!this.config.isServer()) {\n      throw new Error(\n        'A server() only can be called in server environment. Please check your config arguments.'\n      );\n    }\n    return async(req, res, next) => {\n      try {\n        if (!this.config.isUniversal()) {\n          return res.send(this.routerFactory.renderContainer());\n        }\n\n        const history = createMemoryHistory();\n        const store = this.storeFactory.createStore({},\n          [contextMiddleware({ config: this.config, history, req, res, next })]);\n\n        await this.preInitialize(store);\n\n        const router = this.routerFactory.createRouter(history, store);\n        const url = req.originalUrl || req.url || '/';\n        const { redirectLocation, rendered } = await router.renderServer(url, store);\n\n        if (redirectLocation) {\n          return res.redirect(redirectLocation.pathname);\n        }\n\n        return res.send(rendered);\n      } catch (error) {\n        warning(error.stack);\n\n        if (error.component) {\n          res.status(500);\n          return res.send(error.component);\n        }\n\n        return next(error);\n      }\n    };\n  }\n\n  async preInitialize(store) {\n    try {\n      const willDispatch = this.initialActions.map(action =>\n        Promise.resolve(store.dispatch(action)));\n      return await Promise.all(willDispatch);\n    } catch (error) {\n      warning('Failed to PreInitialize. Render with initialStates.');\n      warning(error.stack);\n      return await Promise.reject(error);\n    }\n  }\n\n  client(initialState = {}, container, callback) {\n    if (!this.config.isClient()) {\n      throw new Error(\n        'A client() only can be called in browser. Please check your config arguments.'\n      );\n    }\n\n    if (!container) {\n      throw new Error('A container element is empty.');\n    }\n\n    let history;\n    try {\n      history = this.config.useHashHistory() ? createHashHistory() : createBrowserHistory();\n    } catch (error) {\n      warning('Failed to initialize browser history. Use memory history.');\n      history = createMemoryHistory();\n    }\n    const store = this.storeFactory.createStore(initialState,\n      [contextMiddleware({ config: this.config, history })]);\n    const router = this.routerFactory.createRouter(history, store);\n\n    router.renderClient(container, callback);\n\n    if (this.config.useDevTools()) {\n      router.renderClientWithDevTools(container, callback);\n    }\n  }\n}\n"]}