{"version":3,"sources":["../src/providerMiddleware.js"],"names":[],"mappings":";;;qBAAwB;AAAT,SAAS,kBAAT,GAA4C;oCAAb;;GAAa;;AACzD,SAAO,gBAA4B;QAAzB,yBAAyB;QAAf,yBAAe;;AACjC,WAAO;aAAQ,kBAAU;AACvB,YAAM,YAAY,YAAY,MAAZ,CAAmB,UAAC,aAAD,EAAgB,QAAhB,EAA6B;AAChE,cAAM,WAAW,IAAI,QAAJ,EAAX,CAD0D;AAEhE,wBAAc,SAAS,IAAT,CAAd,GAA+B,SAAS,IAAT,CAAc,OAAO,OAAP,IAAkB,EAAlB,CAA7C,CAFgE;AAGhE,iBAAO,aAAP,CAHgE;SAA7B,EAIlC,EAJe,CAAZ,CADiB;;AAOvB,YAAI,OAAO,KAAP,EAAc;AAChB,iBAAO,OAAO,KAAP,CAAa,QAAb,EAAuB,QAAvB,EAAiC,SAAjC,CAAP,CADgB;SAAlB;;AAIA,eAAO,SAAP,GAAmB,SAAnB,CAXuB;AAYvB,eAAO,KAAK,MAAL,CAAP,CAZuB;OAAV;KAAR,CAD0B;GAA5B,CADkD;CAA5C","file":"providerMiddleware.js","sourcesContent":["export default function providerMiddleware(...willProvide) {\n  return ({ dispatch, getState }) => {\n    return next => action => {\n      const providers = willProvide.reduce((prevProviders, Provider) => {\n        const provider = new Provider();\n        prevProviders[provider.name] = provider.$get(action.context || {});\n        return prevProviders;\n      }, {});\n\n      if (action.thunk) {\n        return action.thunk(dispatch, getState, providers);\n      }\n\n      action.providers = providers;\n      return next(action);\n    };\n  };\n}\n"]}