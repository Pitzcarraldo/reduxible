{"version":3,"sources":["../src/ReduxibleRouter.js"],"names":[],"mappings":"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","file":"ReduxibleRouter.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport Router from 'react-router/lib/Router';\nimport RoutingContext from 'react-router/lib/RoutingContext';\nimport match from 'react-router/lib/match';\nimport Provider from 'react-redux/lib/components/Provider';\nimport { syncReduxAndRouter } from 'redux-simple-router';\n\nexport default class ReduxibleRouter {\n  constructor(options, history, store) {\n    this.routes = options.routes;\n    this.container = options.container;\n    this.errorContainer = options.errorContainer;\n    this.devTools = options.devTools;\n    this.extras = options.extras;\n    this.history = history;\n    this.store = store;\n    syncReduxAndRouter(history, store);\n  }\n\n  static renderComponent({ container, component = <div></div>, error, store = {}, extras = {} }) {\n    const Html = container;\n    return '<!doctype html>\\n' +\n      ReactDOMServer.renderToString(\n        <Html component={component} error={error} store={store} { ...extras } />\n      );\n  }\n\n  provide(children) {\n    return (\n      <Provider store={this.store} key=\"provider\">\n        {children}\n      </Provider>\n    );\n  }\n\n  async renderServer(location) {\n    try {\n      const [ redirectLocation, component ] = await this.route(location);\n      const { container, store, extras } = this;\n      return {\n        redirectLocation,\n        rendered: ReduxibleRouter.renderComponent({ container, component, store, extras })\n      };\n    } catch (error) {\n      const { errorContainer: container, extras } = this;\n      if (container) {\n        error.component = ReduxibleRouter.renderComponent({ container, error, extras });\n      }\n      throw error;\n    }\n  }\n\n  route(location) {\n    return new Promise((resolve, reject) => {\n      match({ routes: this.routes, location }, (error, redirectLocation, renderProps) => {\n        if (error) {\n          return reject(error);\n        }\n\n        if (!redirectLocation && !renderProps) {\n          return reject(new Error('Failed to route. There is no matching path. Please check your routes configuration.'));\n        }\n\n        if (redirectLocation) {\n          return resolve([ redirectLocation ]);\n        }\n        if (renderProps) {\n          return resolve([ null, this.provide(<RoutingContext {...renderProps} />) ]);\n        }\n      });\n    });\n  }\n\n  renderClient(container, callback) {\n    ReactDOM.render(this.provide(this.getRouter()), container, callback);\n  }\n\n  renderClientWithDevTools(container, callback) {\n    window.React = React;\n    // render twice is necessary.\n    // if not, React shows invalid server-client DOM sync error.\n    ReactDOM.render(this.provide(this.getRouterWithDevTools()), container, callback);\n  }\n\n  getRouter() {\n    return <Router history={this.history} routes={this.routes}/>;\n  }\n\n  getRouterWithDevTools() {\n    const DevTools = this.devTools;\n    return (\n      <div>\n        {this.getRouter()} <DevTools/>\n      </div>\n    );\n  }\n}\n"]}